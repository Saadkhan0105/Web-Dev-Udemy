// Generator Iterator: In JavaScript, a generator is a function that returns a generator iterator.
// A generator iterator is an object that can be used to iterate over the values generated by a generator function.

// To create a generator iterator, we can use the `yield` keyword inside the generator function.
// When the generator function is called, it returns a generator iterator object.
// The generator iterator object can be used to iterate over the values generated by the generator function.
// The values can be accessed using the `next()` method of the generator iterator object.
// The `next()` method returns an object with two properties: `value` and `done`.
// `value` is the value that was generated by the generator function, and `done` is a boolean that indicates whether the iteration is complete.

function* numberGenerator() {
    yield 1;
    yield 2;
    yield 3;
    yield 4;
    yield 5;
    yield 6;
    yield 7;
    yield 8;
    yield 9;
    yield 10;
}
let gen = numberGenerator();
console.log(gen.next().value);
// console.log(gen.next().value);
// console.log(gen.next().value);
// console.log(gen.next().value);
// console.log(gen.next().value);


